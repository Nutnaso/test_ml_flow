name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install linters (and deps if requirements.txt exists)
        shell: bash
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          fi
          # Ensure linters are present even if requirements.txt is missing or incomplete
          pip install ruff black

      - name: Ruff (lint + fix)
        run: ruff check . --fix

      - name: Black (format check)
        run: black --check .

  test:
    runs-on: ubuntu-latest
    env:
      MLFLOW_TRACKING_URI: file://${{ github.workspace }}/mlruns
      MPLBACKEND: Agg
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install test dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            # Minimal deps for tests if no requirements.txt in repo root
            pip install mlflow pandas numpy scikit-learn joblib matplotlib openpyxl pytest
          fi

      - name: Run pytest
        run: pytest -q
