name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install linters (and deps if requirements.txt exists)
        shell: bash
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install ruff black

      - name: Ruff (lint + fix)
        run: ruff check . --fix

      - name: Black (format)
        run: black .

      - name: Black (verify)
        run: black --check .

  test:
    runs-on: ubuntu-latest
    env:
      MLFLOW_TRACKING_URI: file://${{ github.workspace }}/mlruns
      MPLBACKEND: Agg
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install test dependencies (robust)
        shell: bash
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; else pip install mlflow pandas numpy scikit-learn joblib matplotlib openpyxl pytest; fi

      - name: Run pytest
        run: pytest -q

      - name: Upload MLflow artifacts for inspection
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: mlflow-artifacts
          path: mlruns/
          if-no-files-found: ignore

  # .github/workflows/main.yml (เติมใน jobs:)
  train:
    runs-on: ubuntu-latest
    needs: [lint, test]
    env:
      MLFLOW_TRACKING_URI: file://${{ github.workspace }}/mlruns
      MPLBACKEND: Agg
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; else pip install mlflow pandas numpy scikit-learn joblib matplotlib openpyxl; fi

      - name: Validate
        run: python mlops_pipeline/script/01_data_validation.py

      - name: Preprocess
        id: preproc
        run: python mlops_pipeline/script/02_data_preprocessing.py
        # สคริปต์ของคุณเขียนผล run_id ลง $GITHUB_OUTPUT อยู่แล้ว

      - name: Train & Register
        run: |
          echo "Using preprocessing_run_id=${{ steps.preproc.outputs.preprocessing_run_id }}"
          python mlops_pipeline/script/03_train_evaluate_register.py "${{ steps.preproc.outputs.preprocessing_run_id }}" DryBeans-Classifier

      # อัปโหลดชุดโมเดลพร้อมตัวแปลง (สะดวกต่อการเสิร์ฟนอก MLflow)
      - name: Upload model bundle (serving_bundle.pkl)
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: model-bundle
          path: model_bundle/
          if-no-files-found: error

      # อัปโหลดทั้งโฟลเดอร์ mlruns (รวม Registry/Artifacts)
      - name: Upload MLflow artifacts for inspection
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: mlflow-artifacts-${{ github.job }}-${{ github.run_attempt }}
          path: mlruns/
          if-no-files-found: ignore
          retention-days: 7
